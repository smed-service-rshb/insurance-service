/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.softlab.efr.services.insurance.controllers;

import ru.softlab.efr.services.insurance.model.rest.InvestmentIncomeDataRs;
import ru.softlab.efr.services.insurance.model.rest.SharesDataRs;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.validation.BindingResult;
import org.springframework.data.web.PageableDefault;
import org.springframework.data.domain.*;

import java.util.*;

import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * the Investment API
 */
public interface InvestmentApi {

    /**
     * Получить информацию о динамике инвестиционного дохода 
     * @param contractId Идентификатор договора  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v1/investment/incomes",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<InvestmentIncomeDataRs> getInvestmentIncome(@NotNull  @Valid @RequestParam(value = "contractId") Long contractId) throws Exception;



    /**
     * Получить excel файл с данными по базовым активам 
     * @param contractId Идентификатор договора
     * @param strategyId Идентификатор стратегии  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v1/investment/incomes/report",
        produces = { "application/octet-stream" }, 
        method = RequestMethod.GET)
    ResponseEntity<byte[]> getInvestmentIncomeReport(@NotNull  @Valid @RequestParam(value = "contractId") Long contractId,@NotNull  @Valid @RequestParam(value = "strategyId") Long strategyId) throws Exception;



    /**
     * Получить список акций с котировками 
     * @param contractId Идентификатор договора  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v1/investment/shares",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<SharesDataRs> getShare(@NotNull  @Valid @RequestParam(value = "contractId") Long contractId) throws Exception;



    /**
     * Получить excel файл отчета по изменений котировок акций 
     * @param contractId Идентификатор договора  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v1/investment/shares/report",
        produces = { "application/octet-stream" }, 
        method = RequestMethod.GET)
    ResponseEntity<byte[]> getShareReport(@NotNull  @Valid @RequestParam(value = "contractId") Long contractId) throws Exception;



    /**
     * Запустить репликацию справочника по базовым индексам   
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v1/investment/baseIndex/load",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> loadBaseIndex() throws Exception;



    /**
     * Запустить репликацию котировок акций   
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v1/investment/share/load",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<Void> loadShare() throws Exception;


}
