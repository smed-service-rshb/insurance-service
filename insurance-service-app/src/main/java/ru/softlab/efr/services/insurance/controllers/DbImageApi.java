/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package ru.softlab.efr.services.insurance.controllers;

import ru.softlab.efr.services.insurance.model.rest.InlineResponse200;
import org.springframework.core.io.Resource;

import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.validation.BindingResult;
import org.springframework.data.web.PageableDefault;
import org.springframework.data.domain.*;

import java.util.*;

import org.springframework.validation.annotation.Validated;
import javax.validation.constraints.*;
import javax.validation.Valid;

/**
 * the DbImage API
 */
public interface DbImageApi {

    /**
     * Сохранить изображение в БД 
     * @param content Изображение  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v2/image",
        method = RequestMethod.POST)
    ResponseEntity<InlineResponse200> addImage(@Valid @RequestPart(value="content", required=false) MultipartFile content) throws Exception;



    /**
     * Удалить изображение в БД 
     * @param id Идентификатор изображения  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/v2/image/{id}",
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteImage(@PathVariable("id") Long id) throws Exception;



    /**
     * Получить масcив байтов изображения сохраненного в БД 
     * @param id Идентификатор изображения в БД  
     * @return Экземпляр класса {@link ResponseEntity}
     * @throws Exception исключение, выбрасываемое в случае ошибок при выполнении метода
     */
    @RequestMapping(value = "/insurance-service/public/v2/image/{id}",
        produces = { "application/octet-stream" }, 
        method = RequestMethod.GET)
    ResponseEntity<byte[]> getImage(@PathVariable("id") Long id) throws Exception;


}
